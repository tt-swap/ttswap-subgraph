type Customer @entity(immutable:false) {
  # address
  id: ID!
  refer: String
  tradeValue: BigInt!
  investValue: BigInt!
  disinvestValue: BigInt!
  tradeCount: BigInt!
  investCount: BigInt!
  disinvestCount: BigInt!
  userConfig:BigInt!
  customerno:BigInt!
  totalprofitvalue:BigInt!
  totalcommissionvalue:BigInt!
  lastoptime:BigInt!
  referralnum:BigInt!
  getfromstake:BigInt!
  stakettsvalue:BigInt!
  stakettscontruct:BigInt!
  custdata:[CustomerData!]@derivedFrom(field: "customerid")
}

type CustomerData @entity(immutable:false) {
  # address
  id:ID!
  refer: String
  tradeValue: BigInt!
  investValue: BigInt!
  disinvestValue: BigInt!
  tradeCount: BigInt!
  investCount: BigInt!
  disinvestCount: BigInt!
  userConfig:BigInt!
  customerno:BigInt!
  totalprofitvalue:BigInt!
  totalcommissionvalue:BigInt!
  customerid:Customer!
  referralnum:BigInt!
  getfromstake:BigInt!
  stakettsvalue:BigInt!
  stakettscontruct:BigInt!
  create_time:BigInt!
}

type MarketState @entity(immutable:false) {
  #market address
  id: ID!
  marketConfig: BigInt!
  marketCreator:String!
  goodCount: BigInt!
  proofCount: BigInt!
  userCount: BigInt!
  txCount: BigInt!
  totalTradeValue: BigInt!
  totalInvestValue: BigInt!
  totalDisinvestValue: BigInt!
  totalTradeCount: BigInt!
  totalInvestCount: BigInt!
  totalDisinvestCount: BigInt!
}

type GoodState @entity(immutable:false) {
  id: ID!
  goodseq:BigInt!
  isvaluegood:Boolean!
  tokenname: String!
  tokensymbol: String!
  tokentotalsuply: BigInt!
  tokendecimals: BigInt!
  owner: String!
  erc20Address: String!
  goodConfig: BigInt!
  currentValue:BigInt!
  currentQuantity:BigInt!
  investValue:BigInt!
  investQuantity:BigInt!
  feeQuantity:BigInt!
  contructFee: BigInt!
  totalTradeQuantity:BigInt!
  totalInvestQuantity:BigInt!
  totalDisinvestQuantity:BigInt!
  totalProfit: BigInt!
  totalTradeCount: BigInt!
  totalInvestCount: BigInt!
  totalDisinvestCount: BigInt!
  modifiedTime: BigInt!
  txCount:BigInt!
  create_time: BigInt!
  name_lower:String!
  symbol_lower:String!
  normalProof_v: [ProofState!] @derivedFrom(field: "good2")
  normalProof_n: [ProofState!] @derivedFrom(field: "good1")
  goodData: [GoodData!] @derivedFrom(field: "good")
}

type ProofState @entity(immutable:false) {
  id: ID!
  owner: String!
  good1: GoodState!
  good2: GoodState!
  proofValue:BigInt!
  good1ContructFee: BigInt!
  good1Quantity:BigInt!
  good2ContructFee: BigInt!
  good2Quantity:BigInt!
  createTime: BigInt!
}

type Transaction @entity(immutable:false) {
  # goodid+goodtxcount%500
  id: ID!
  blockNumber: BigInt!
  transtype:String!
  transvalue:BigInt!
  fromgood:GoodState!
  togood:GoodState!
  fromgoodQuanity:BigInt!
  fromgoodfee:BigInt!
  togoodQuantity:BigInt!
  togoodfee:BigInt!
  hash:String!
  recipent:String!
  timestamp: BigInt!
}

type GoodData @entity(immutable:false) {
  # hour:GoodId+h+minute (60 rows)
  # day: GoodId+d+20minute (72 rows)
  # week:GoodId+w+3hour  (56 rows)
  # month:GoodId+m+12hour (62 rows)
  # year: GoodId+y+5day (73)
  id: ID!
  good: GoodState!
  timetype:String!
  modifiedTime: BigInt!
  goodConfig: BigInt!
  isvaluegood:Boolean!
  decimals: BigInt!
  currentValue:BigInt!
  currentQuantity:BigInt!
  investValue:BigInt!
  investQuantity:BigInt!
  feeQuantity:BigInt!
  contructFee:BigInt!
  totalTradeQuantity:BigInt!
  totalInvestQuantity:BigInt!
  totalDisinvestQuantity:BigInt!
  totalProfit:BigInt!
  totalTradeCount: BigInt!
  totalInvestCount: BigInt!
  totalDisinvestCount: BigInt!
  open: BigInt!
  high: BigInt!
  low: BigInt!
  close: BigInt!
}

type MarketData @entity(immutable:false) {
  # hour:h+minute (60 rows)
  # day: d+20minute (72 rows)
  # week:w+3hour  (56 rows)
  # month:m+12hour (62 rows)
  # year: y+5day (73)
  id: ID!
  timetype:String!
  marketConfig: BigInt!
  goodCount: BigInt!
  proofCount: BigInt!
  userCount: BigInt!
  txCount: BigInt!
  totalTradeValue:BigInt!
  totalInvestValue:BigInt!
  totalDisinvestValue:BigInt!
  totalTradeCount: BigInt!
  totalInvestCount: BigInt!
  totalDisinvestCount: BigInt!
  modifiedTime: BigInt!
}


type tts_env  @entity(immutable:false) {
  id:ID!
  poolvalue:BigInt!
  poolasset:BigInt!
  poolcontruct:BigInt!
  dao_admin:String!
  marketcontract:String!
  usdtcontract:String!
  publicsell:BigInt!
  lsttime:BigInt!
  actual_amount:BigInt!
  shares_index:BigInt!
  left_share:BigInt!
  usdt_amount:BigInt!
  lasttime:BigInt!
}

type tts_share @entity(immutable:false){
  id:ID!
  share_owner:String!
  share_leftamount:BigInt!
  share_metric:BigInt!
  share_chips:BigInt!
}

type tts_auth @entity(immutable:false){
  id:ID! #user
  priv:BigInt!
}


type ttswap_stakeeth_env @entity(immutable:false){
  id:Bytes!
  TotalState0:BigInt!
  TotalState1:BigInt!
  ethShare0:BigInt!
  ethShare1:BigInt!
  wethShare0:BigInt!
  wethShare1:BigInt!
  TotalStake0:BigInt!
  TotalStake1:BigInt!
  Total_stake:BigInt!
  Total_reward:BigInt!
  reth_staking0:BigInt!
  reth_staking1:BigInt!
  total_restakedAmount:BigInt!
  total_restakedAward:BigInt!
  total_ttsreward:BigInt!
  rocketReward:BigInt!
}



